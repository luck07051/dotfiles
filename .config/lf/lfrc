#====================BASIC====================#
set hidden true
set ignorecase true

set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

set shell zsh


#====================FUNCTIONS====================#
#===Basic===#
cmd q %{{ lf -remote "send $id quit" }}

cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        application/pdf) zathura "$f" &;;
        image/*) sxiv "$f" &;;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir %{{
  printf "Directory Name: "
  read ans
  mkdir -p $ans
  lf -remote "send $id select \"$ans\""
}}

cmd mkfile %{{
  printf "File Name: "
  read ans
  lf -remote "send $id edit $ans"
  lf -remote "send $id select \"$ans\""
}}
cmd edit ${{ $EDITOR "$@" }}

cmd mv %{{
    printf "Move to: "
    read ans

    for file in "$fx"
    do
        mv $file $ans
    done
}}

cmd open-with %"$@" $fx

#===cd===#
cmd zoxide %{{
    eval "$(zoxide init zsh --cmd z)"
    lf -remote "send $id cd '$(z $1; pwd)'"
}}

cmd chmod %{{
    printf "Mode Bits: "
    read ans

    for file in "$fx"
    do
        chmod $ans $file
    done

    lf -remote 'send reload'
}}

cmd excutable %{{
    for file in "$fx"
    do
        chmod +x $file
    done

    lf -remote 'send reload'
}}

#===jump===#
cmd fzf_jump %{{
    res="$(fd --hidden --ignore-file ~/.config/fzf/ignore-file --type file | fzf-tmux)"
    if [ -d "$res" ]; then
        cmd="cd"
    else
        cmd="select"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_jump_global %{{
    res="$(locate home media | fzf-tmux -e -i)"
    if [ -d "$res" ]; then
        cmd="cd"
    else
        cmd="select"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_jump_local %{{
    res="$(find . -maxdepth 1 | sed 's/\.\///g' | fzf-tmux -d 35% --info=hidden)"
    cmd="select"
    lf -remote "send $id $cmd \"$res\""
}}



#===Archive bindings===#
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

#====================KEYBINDING====================#
# Reset
map c
map m
map "'"
map '"'

map <esc> clear
map D delete
map cd push :zoxide<space>
map mkd mkdir
map mkf mkfile
map mv mv
map ` push :open-with<space>

map f fzf_jump
map <c-f> fzf_jump_global
map / fzf_jump_local

map ; read

