#!/bin/sh
# `setwallpaper`
#   set wallpaper (put in ".xinit" or startup propram)
#
# `setwallpaper /img/path`
#   change wallpaper
#
# `setwallpaper /img/path -s1`
#   use `-s` to specify screen
#
# `setwallpaper /img/path -f zoom`
#   use `-f` to specify fill method

help(){
	cat << EOF
no help
EOF
	exit
}

change_img() {
	# default value
	screen=0
	fill="zoom"

	TEMP=$(getopt -o 'hs:f:' --long 'help,screen:,fill:' -n "$0" -- "$@")
	[ $? -ne 0 ] && err
	eval set -- "$TEMP"
	unset TEMP
	while :; do
		case $1 in
			'-h'|'--help')   help;;
			'-s'|'--screen') screen="$2"; shift 2 ;;
			'-f'|'--fill')   fill="$2";   shift 2 ;;
			'--')            img="$2";    break ;;
			*) echo 'Internal error!' >&2; exit 1 ;;
		esac
	done
	[ -z "$img" ] && { echo 'Please provide image' >&2; exit 1; }
	[ ! -f "$img" ] && { echo "Image $img not found!" >&2; exit 1; }

	# file name looks like `0-zoom.jpg`
	# first char `0` for screen and `zoom` for fill method.
	rm -f "$wall_dir"/"$screen"-*
	cp "$(readlink -f "$img")" "$wall_dir/$screen-$fill.${img##*.}"
}

wall_dir="${XDG_DATA_HOME:-$HOME/.local/share}/wallpaper"
[ ! -d "$wall_dir" ] && mkdir -p "$wall_dir"

[ -n "$1" ] && change_img "$@"

# change wallpaper
for file in "$wall_dir"/*; do
	# get base name of `file`
	file_base="$(basename "${file%.*}")"
	xwallpaper --screen "${file_base%%-*}" --"${file_base##*-}" "$file"
done
