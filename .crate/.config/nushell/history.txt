lf
echo etc/shells
echo /etc/shells
open /etc/shells
useadd -s /bin/nu -l ui
useradd -s /bin/nu -l ui
useradd -s /bin/nu ui
usermod -h
usermod -s /bin/nu ui
usermod -s '/bin/nu -l' ui
usermod -s '/bin/nu' ui
usermod -s '/bin/nu -l' ui
/bin/nu -l
echo $env.SHELL
zsh -h
man zsh
lf
chsh
lf
chsh
lf
zsh
lf
nvim
lf
env
chsh
reboot
lf
nu -h
lf
$nu.loginshell-path
$nu.config-path
$nu.home-path
$nu.os-info
$nu.plugin-path
sudo pacman -Syu
lf
env
nvim
clear
nu --versin
nu --version
sudo pacman -S nu
sudo pacman -S nushell
sudo pacman -Syu
nu -h
man nu
help nu
help
lf
cd .config/
ls
open i3/
cd nushell
ls
open login.nu
$env.LOGNAME
lf
cd
chsh -s /bin/nu
version | transpose key value | to md --pretty
lf
if $env.F != "df" { echo 'a' } else { echo "b" }
;f
lf
cd .config/lf
ls
chmod -x colors
ls
open ~/.config/lf/colors
^export TEST="a"
^ls
lf
open ~/.config/lf/colors | replace-all -P '\' -r ''
replace-all
into string
open ~/.config/lf/colors | into string | replace-all -P '\' -r ''
open ~/.config/lf/colors | into string
open ~/.config/lf/colors
lf
source ~/.config/lf
source ~/.config/lf/colors.nu
lf
cd .config/lf
ls
open colors.txt
open colors.txt | into string
open colors.txt | replace-all -p "\n" -r ""
open colors.txt
replace-all -p "a" -r "A"
echo "abc" | replace-all -p "a" -r "A"
open colors.txt | line
open colors.txt | lines
open colors.txt | lines | str
open colors.txt | str
open colors.txt | str replace -p "\n" -r ""
open colors.txt | str replace
help str replace
open colors.txt | str replace -a "\n" ""
lf
with-env {<\n>LF_COLORS: ( open colors.txt | str replace -a "\n" "" )<\n>}
with-env {<\n>LF_COLORS: ( open colors.txt | str replace -a "\n" "" )<\n>} { lf }
lf
reboot
env
lf
with-env {<\n>LF_COLORS: ( open colors.txt | str replace -a "\n" "" )<\n>} { lf }
with-env {<\n>LF_COLORS: ( open .config/lf/colors.txt | str replace -a "\n" "" )<\n>} { lf }
env
lf
nvim test
cd ( open test )
lf
lfr
lf
lfrun
lf
lfrun
open ($env.XDG_CONFIG_HOME)/lf/colors.txt
open $"($env.XDG_CONFIG_HOME)"/lf/colors.txt
echo $"($env.XDG_CONFIG_HOME)"/lf/colors.txt
$env.XDG_CONFIG_HOME
echo $"($env.XDG_CONFIG_HOME)/lf/colors.txt"
lf
lf
qq
clear
lf
f
lf
lf
lfrun
lf
;q
/tmp/lfcd
(/tmp/lfcd)
lfrun; cd (open /tmp/lfcd)
lf
^cd .config
lf
$env.PWD
ls
lf
_cd "/tmp"
lf
_cd "/tmp"
lf
_cd "/tmp"
cd
lf
env
$env
env
lf
config
conf
lf
conf add colors.txt
echo ($env.HOME)
echo ($env.HOME)/abc
echo ($env.HOME) /abc
echo ($env.HOME) + /abc
lf
conf add colors.txt
cd .config/lf
conf add colors.txt
cd .config/lf
conf add colors.txt
conf
lf -h
/usr/bin/lf -h
lf -h
lf --version
echo --git-dir=$"($env.HOME)/.dot"
echo git-dir=$"($env.HOME)/.dot"
echo "git-dir=$($env.HOME)/.dot" | to text
echo $"git-dir=$($env.HOME)/.dot" | to text
echo $"git-dir=($env.HOME)/.dot" | to text
conf
cd .config/lf
conf add colors.txt
echo $env.HOME/abc
echo "$env.HOME"/abc
echo $"$env.HOME"/abc
echo $"($env.HOME)"/abc
echo $"($env.HOME)/abc"
conf
conf add
echo "($env.HOME)/df"
echo $"($env.HOME)/df"
git -h
conf
cd .config/lf
conf add colors.txt
conf status
$"~/conf"
co
lf
conf add config.nu
conf status
conf -h
conf --work-tree
echo efdf $env.PATH
ww
ls
ll
yarn
ls
yarn
ls
lf
wget
wget -h
lf
yarn
./xdg-ninja/xdg-ninja.sh
lf
yarn
lf
ls
lf
ls
lf
cocd
cd
config nu
ls
ll
ls
ll
ls
cd .coinfig
ls
.config
ls
ls -h
config nu
$nu.config-path
$nu.config-path | path
$nu.config-path | path dirname
ls
.config/zsh
ls
date now
date now | date format '%m/%d/%Y %r'
date now | date format '%r'
date now | date format '%R'
date format -h
date now | date format '%R'
ls
ansi strip
help ansi
ls
34 | describe
34.34 | describe
abc | describe
mkdir test/dir
ls
lf
$env.CACHE
lf
ww
wget
wget -h
ls
yarn
ls
lf
yarn install
ls
yarn install
ls
lf
yarn 0h
lf
yarn -h
lf
clear
lf
env
env | where name != config
env
1..3
1..3 | into str
1..3 | into string
open wallpaper/01.png
'env'
envc
1..5 | each { |it| echo $it }
1..5 | each { |it| echo ($it + 3) }
sys
sys.host
echo sys.host
echo $sys.host
sys.host
(sys).host
(sys).host.sessions
(sys).host.sessions.git
(sys).host.sessions | where name == git
(sys).host.sessions | where name == git | get groups
ps
ps | sort mem
ps | sort by README.md
ps | sort-by mem
ps | sort-by mem | where name == "*firefox"
ps | sort-by mem | where name == *firefox
ps | sort-by mem | where name == $"*firefox"
ps | sort-by mem | where name == /usr/lib/firefox/firefox
ps | sort-by mem | where name == /usr/lib/firefox/firefox | get mem
ps | sort-by mem | where name =~ /usr/lib/firefox/firefox | get mem
env
lf
conf add ./*
lf
conf add ./*
lf
conf add config.nu
conf add env.nu
ls
conf add login.nu
conf add profile
conf status
lf
conf add ./*
lf
conf status
conf commit -am "try out nushell. setting leftwm."
conf push
lf
rofi -h
lf
rifo
rofi
rofi -show
lf
conf status
ls
open README.md
lf
env
$nu.config-path | path dirname | path join 'completions.nu'
open $nu.config-path | path dirname | path join 'completions.nu'
open ($nu.config-path | path dirname | path join 'completions.nu')
lf
env
lf
env
lf
$env.NU_CONFIG_DIRS | path join 'completions.nu'
open ($env.NU_CONFIG_DIRS | path join 'completions.nu')
ls
env
lf
env
lf
$env.NU_CONFIG_DIRS
$nu
source $"($env.NU_CONFIG_DIRS)/completions"
source ($"($env.NU_CONFIG_DIRS)/completions")
source ($nu.config-path)
source $nu.config-path
($env.NU_CONFIG_DIRS) | path join 'profile'
($env.NU_CONFIG_DIRS | path join 'profile')
./($env.NU_CONFIG_DIRS | path join 'profile')
/($env.NU_CONFIG_DIRS | path join 'profile')
run ($env.NU_CONFIG_DIRS | path join 'profile')
ls
lf
./test.sh
cd
exec -h
source $"($env.NU_CONFIG_DIRS)/completions"
source ($nu.config-path)
source $nu.config-path
$nu.config-path
lf
let-env TEST = '~/.config/nushell/config.nu'; source $env.TEST
brew
sudo pacman -Syu nushell
source $nu.config-path
source ($nu.config-path)
ls
lf
./test.nu
lf
./test.nu
lf
env
lf
conf status
conf commit -am "change nvim pcall patterns. specify in rofi conf."
conf diff
env
ls
cd vimwiki
ls
env
env | where name == PATH
env | where name == PATH | get value
lf
help lines
echo $'two(char nl)lines'
echo $'two(char nl)lines' | lines
clear
help size
"abc" | size
ls
env
env | where name == PATH | get value | open
env | where name == PATH | get value
env | where name == PATH | get value
env | where name == PATH | get value | list
env | where name == PATH | get value
'env'
$env.config
env | where name == PATH | get value
$env.PATH
lf
clear
ls
(char nl)
ps
ps | where name =~ 'firefox'
ps | where name =~ 'firefox' | get mem
ps | where name =~ 'firefox' | get mem | reduce { |x,a| $a + $x }
ps | where name =~ 'firefox' | get mem
ps
ps | where name =~ 'firefox' | get mem | reduce { |x,a| $a + $x }
$env.A | empty?
["abc", "ddd"] | wrap "str"
ls | save ls.txt
null
lf
conf add ./*
lf
conf rm matlab
conf status
lf
cons
cd
ls
lf
clear
ls
ll
ls
lf
(ls).name
lf
cd
vim -h
lf
vimwiki
vimwiki/
ls
cd vimwiki
overlay list
module spam { export def foo [] { "foo" } }
foo
spam foo
use spam
foo
fpam foo
spam foo
overlay add spam
foo
ls
overlay remove
module sp { export def ass [] { "ass" } }
use sp
sp ass
spam foo
overlay sp
overlay add sp
ass
spam foo
overlay add spam
foo
sp
overlay list
ass
overlay remove
overlay list
overlay remove
clear
env
env | where type != string
clear
$env.PATH | length
$env.PATH
env
lf
open alacritty.yml
open alacritty.yml | get env
open alacritty.yml | get colors
lf
vim colors
lf
vim colors
lf
vim colors
vim colors.yml
clear
vim colors.yml
sudo pacman -S tldr
tldr sudo
man sudo
lf
h
tldr man
lf
do -i { $env.A }
clear
help decode
lf
open xauthority
open xauthority | decode utf-16be
open xauthority | decode utf-16
open xauthority | decode base64
open xauthority | decode base64
help decode
open xauthority | encode base64
hexyl xauthority
open xauthority | encode base64
open xauthority | encode
help encode
open xauthority | encode urf-16
clear
enter ~
shells
n
enxt --now
kdf
shells
cd (ls | where type == dir | each { |it| $it.name} | str collect (char nl) | fzf | decode utf-8 | str trim)
keybindings list
keybindings list | where type == edits
lf
keybindings list | where type == send
keybindings list
lf
($env.NU_CONFIG_DIRS | path join 'profile')
do ($env.NU_CONFIG_DIRS | path join 'profile')
run ($env.NU_CONFIG_DIRS | path join 'profile')
cd .config/lf
cd
cd lf
cd
lf
ww
lf
ww
'env'
| str upcase 
clear
tldr man
ld
lf
clear
is-admin
keybindings list
(49253 /20)
(49253 / 20)
(49253 / 20 / 60)
lf
clear
lf
conf add completions.nu
conf add config.nu
conf add env.nu
conf add keybindings.nu
conf login.nu
conf add login.nu
conf menus.nu
conf add menus.nu
conf add profile
lf
chsh -s /bin/zsh
ls
