set nocompatible
set t_RV=

set encoding=utf-8

filetype plugin indent on
syntax enable           " open syntax highlight

set t_Co=256
set t_ut=""
set background=dark     " dark back ground
colorscheme lucius      " theme

set ruler               " show the cursor position below
set number              " show line number on left side
set showcmd             " show incomplete commad in last line
set noshowmode          " dont show mode below
set cursorline          " highlight cursor line
set laststatus=2        " display how many status line
set scrolloff=3         " keep 3 line when scrolling

set hlsearch            " highlight search result
set incsearch           " do incremental searching
set ignorecase          " ignore case when searching, use \c turn off
set smartcase           " no ignorecase if uppercase char present

set shiftwidth=4        " indent width
set softtabstop=4       " tab width
set expandtab           " tab always insert softtabstop of amonut spaces 
set autoindent          " copy the indentation of the previous line
set smartindent         " auto indent to next level, work on C-like file
set shiftround          " round the indentation to the nearest multiple of shiftwidth

set foldmethod=syntax   " ues syntax fold
set foldlevel=99        " default no fold
 
set showmatch           " when you insert bracket, 
set matchtime=1         "    the cursor will briefly jump to the matching one

set nobackup            " not keep the backup file

set linebreak           " if text warp, no break on word

set wildmenu            " show the commom complete list, can use Tab and S-Tab

set backspace=indent,eol,start  " make that backspace key work the way it should

set novisualbell        " turn off visual bell
set visualbell t_vb=    " turn off error beep/flash


"-----common-----"

" no auto comment new line
autocmd filetype * set formatoptions-=c formatoptions-=r formatoptions-=o

"no extra space
autocmd BufWrite *.cpp,*.h,makefile call DeleteExtraSpaces()
function DeleteExtraSpaces()
    :let b:nline= line('.')
    :%s/\s\+$//e
    :execute "to ".b:nline
endfunction

